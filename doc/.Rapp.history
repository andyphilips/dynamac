############ EC#
# set.seed(1)#
# const <- 2 # constant needed to have a value of mean.y#
# x.full <- rep(NA, 500)#
# y.diff.full <- rep(NA, length(x.full))#
# y.full <- rep(NA, length(x.full))#
# y.full[1] <- 1#
# x.full[1] <- 15#
# y.diff.full[1] <- beta.lx/(-1 * phi)#
#
set.seed(1)#
x.error <- rnorm(500, 0, 2)#
x.full <- x.error#
y.error <- rnorm(500, 0, 2)#
y.full <- y.error#
y.diff.full <- rep(NA, length(y.full))#
phi <- -0.8 # coef on ldv#
beta.lx <- 1 # coef on l.x#
beta.diff.x <- -2 # coef on x#
for(i in 2:length(x.full)) {#
	x.full[i] <- x.full[i - 1] + x.error[i]#
	y.diff.full[i] <- phi*y.full[i - 1] + beta.diff.x*(x.full[i] - x.full[i - 1]) + beta.lx*x.full[i - 1] + y.error[i] # rnorm(1, 0, 1) + const*rnorm(1, 1, 0.25) +#
	y.full[i] <- y.full[i - 1] + y.diff.full[i]#
}#
#
# Trim the burn in#
x <- x.full[101:500]#
y.diff <- y.diff.full[101:500]#
y <- y.full[101:500]#
#
par(mfrow = c(2, 2))#
plot(y.diff)#
plot(y)#
plot(x)#
dev.off()#
#
set.seed(1)#
model.ec <- dynardl(y ~ x, lags = list("x" = c(1)), diffs = c("x"), #
	simulate = TRUE, fullsims = TRUE, #
	shockvar = "x",#
	sims = 10000, range = 20,#
	ec = TRUE)#
summary(model.ec)#
#
dynardl.all.plots(model.ec, bw = TRUE, tol = 0.05)
library(dynamac)
############ EC#
# set.seed(1)#
# const <- 2 # constant needed to have a value of mean.y#
# x.full <- rep(NA, 500)#
# y.diff.full <- rep(NA, length(x.full))#
# y.full <- rep(NA, length(x.full))#
# y.full[1] <- 1#
# x.full[1] <- 15#
# y.diff.full[1] <- beta.lx/(-1 * phi)#
#
set.seed(1)#
x.error <- rnorm(500, 0, 2)#
x.full <- x.error#
y.error <- rnorm(500, 0, 2)#
y.full <- y.error#
y.diff.full <- rep(NA, length(y.full))#
phi <- -0.8 # coef on ldv#
beta.lx <- 1 # coef on l.x#
beta.diff.x <- -2 # coef on x#
for(i in 2:length(x.full)) {#
	x.full[i] <- x.full[i - 1] + x.error[i]#
	y.diff.full[i] <- phi*y.full[i - 1] + beta.diff.x*(x.full[i] - x.full[i - 1]) + beta.lx*x.full[i - 1] + y.error[i] # rnorm(1, 0, 1) + const*rnorm(1, 1, 0.25) +#
	y.full[i] <- y.full[i - 1] + y.diff.full[i]#
}#
#
# Trim the burn in#
x <- x.full[101:500]#
y.diff <- y.diff.full[101:500]#
y <- y.full[101:500]#
#
par(mfrow = c(2, 2))#
plot(y.diff)#
plot(y)#
plot(x)#
dev.off()#
#
set.seed(1)#
model.ec <- dynardl(y ~ x, lags = list("x" = c(1)), diffs = c("x"), #
	simulate = TRUE, fullsims = TRUE, #
	shockvar = "x",#
	sims = 10000, range = 20,#
	ec = TRUE)#
summary(model.ec)#
#
dynardl.all.plots(model.ec, bw = TRUE, tol = 0.05)
library(dynamac)
set.seed(1)#
x.error <- rnorm(500, 0, 2)#
x.full <- x.error#
y.error <- rnorm(500, 0, 2)#
y.full <- y.error#
y.diff.full <- rep(NA, length(y.full))#
phi <- -0.8 # coef on ldv#
beta.lx <- 1 # coef on l.x#
beta.diff.x <- -2 # coef on x#
for(i in 2:length(x.full)) {#
	x.full[i] <- x.full[i - 1] + x.error[i]#
	y.diff.full[i] <- phi*y.full[i - 1] + beta.diff.x*(x.full[i] - x.full[i - 1]) + beta.lx*x.full[i - 1] + y.error[i] # rnorm(1, 0, 1) + const*rnorm(1, 1, 0.25) +#
	y.full[i] <- y.full[i - 1] + y.diff.full[i]#
}#
#
# Trim the burn in#
x <- x.full[101:500]#
y.diff <- y.diff.full[101:500]#
y <- y.full[101:500]#
#
par(mfrow = c(2, 2))#
plot(y.diff)#
plot(y)#
plot(x)#
dev.off()#
#
set.seed(1)#
model.ec <- dynardl(y ~ x, lags = list("x" = c(1)), diffs = c("x"), #
	simulate = TRUE, fullsims = TRUE, #
	shockvar = "x",#
	sims = 10000, range = 20,#
	ec = TRUE)#
summary(model.ec)#
#
dynardl.all.plots(model.ec, bw = TRUE, tol = 0.05)
dynardl.all.plots(model.ec, bw = TRUE, tol = 0.05)
beta.lx/(-1 * phi)
